// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/categories/": {
            "post": {
                "description": "creates a category for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "create a category",
                "parameters": [
                    {
                        "description": "enter credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateCategoryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.SuccessRes"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a category for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "parameters": [
                    {
                        "description": "enter credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.DeleteCategoryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.SuccessRes"
                        }
                    }
                }
            },
            "patch": {
                "description": "Renames a category for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Rename a category",
                "parameters": [
                    {
                        "description": "enter credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.RenameCategoryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.SuccessRes"
                        }
                    }
                }
            }
        },
        "/categories/all": {
            "post": {
                "description": "returns array of categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get categories of user",
                "parameters": [
                    {
                        "description": "enter Email,Password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/categories/merge": {
            "post": {
                "description": "Merges a category into another, all the transactions of soruce category will now be part of destination category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Merge a category into another",
                "parameters": [
                    {
                        "description": "enter credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.MergeCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.SuccessRes"
                        }
                    }
                }
            }
        },
        "/categories/n": {
            "post": {
                "description": "returns array of categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get categories of user",
                "parameters": [
                    {
                        "description": "enter Email,Password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/friends/": {
            "post": {
                "description": "creates a friend",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Friends"
                ],
                "summary": "create a friend",
                "parameters": [
                    {
                        "description": "enter Email, Password and friend Name",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateFriendReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.SuccessRes"
                        }
                    }
                }
            }
        },
        "/friends/get": {
            "post": {
                "description": "get friends",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Friends"
                ],
                "summary": "get friends",
                "parameters": [
                    {
                        "description": "enter Email, Password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.GetFriendsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.SuccessRes"
                        }
                    }
                }
            }
        },
        "/money-lent": {
            "post": {
                "description": "Money lent to a friend",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MoneyLent"
                ],
                "summary": "Money Lent to a friend",
                "parameters": [
                    {
                        "description": "enter Email, Password and friend Name",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.MoneyLentFriend"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.SuccessRes"
                        }
                    }
                }
            }
        },
        "/net-amount/categories": {
            "post": {
                "description": "get money spent on each category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Net-Amount"
                ],
                "summary": "get money spent on each category",
                "parameters": [
                    {
                        "description": "enter Email,Password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.NetAmountByCategoryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "money spent on each category as list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/settle-transaction": {
            "post": {
                "description": "settle a split transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settleTransaction"
                ],
                "summary": "settle a split",
                "parameters": [
                    {
                        "description": "enter Email, Password and friend Name",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SettleTransactionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.SuccessRes"
                        }
                    }
                }
            },
            "delete": {
                "description": "settle a split transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settleTransaction"
                ],
                "summary": "settle a split",
                "parameters": [
                    {
                        "description": "enter Email, Password and friend Name",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UnSettleTransactionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.SuccessRes"
                        }
                    }
                }
            }
        },
        "/split-tags": {
            "get": {
                "description": "returns split tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Split-tags"
                ],
                "summary": "Get split tags",
                "responses": {
                    "200": {
                        "description": "returns split tags",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/split-transaction": {
            "post": {
                "description": "split a transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SplitTransaction"
                ],
                "summary": "split a transaction",
                "parameters": [
                    {
                        "description": "split transaction",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SplitTransactionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.SuccessRes"
                        }
                    }
                }
            },
            "delete": {
                "description": "deletes a alreadt split transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SplitTransaction"
                ],
                "summary": "deletes a alreadt split transaction",
                "parameters": [
                    {
                        "description": "delete split",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.DeleteSplitTransactionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.SuccessRes"
                        }
                    }
                }
            }
        },
        "/split-transaction/one": {
            "post": {
                "description": "split a transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SplitTransaction"
                ],
                "summary": "split a transaction",
                "parameters": [
                    {
                        "description": "split with one",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SplitWithOneFriendReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.SuccessRes"
                        }
                    }
                }
            }
        },
        "/split-transaction/splits": {
            "post": {
                "description": "Get splits of user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SplitTransaction"
                ],
                "summary": "Get splits of user",
                "parameters": [
                    {
                        "description": "get split transaction",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.GetSplitTransactionsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.SuccessRes"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "post": {
                "description": "create a transaction with category V2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions",
                    "V2"
                ],
                "summary": "creates a transaction for a user V2",
                "parameters": [
                    {
                        "description": "enter Email,Password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateTransactionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.SuccessRes"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "delete transaction for a user",
                "parameters": [
                    {
                        "description": "enter Email,Password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.DeleteTransactionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.SuccessRes"
                        }
                    }
                }
            }
        },
        "/transactions/all": {
            "post": {
                "description": "returns transactions as string for UI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions",
                    "V2"
                ],
                "summary": "Get transactions list as string of user",
                "parameters": [
                    {
                        "description": "enter Email,Password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.GetTransactionsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns transaction strings as list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/transactions/categories": {
            "post": {
                "description": "returns transactions list for a category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "returns transactions of category",
                "parameters": [
                    {
                        "description": "enter Email,Password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.TransactionsOfCategoryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/views.TransactionWithCategory"
                            }
                        }
                    }
                }
            }
        },
        "/transactions/category": {
            "post": {
                "description": "returns transactions list for a category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "returns transactions of category",
                "parameters": [
                    {
                        "description": "enter Email,Password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.TransactionsOfCategoryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/transactions/get": {
            "post": {
                "description": "returns transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions",
                    "V2"
                ],
                "summary": "Get transactions of user",
                "parameters": [
                    {
                        "description": "enter Email,Password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateTransactionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/transactions/last-n": {
            "post": {
                "description": "Get last N transaction list of user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get last N transactions of user",
                "parameters": [
                    {
                        "description": "enter Email,Password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.GetLastNTransactionsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "last N transactions list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/transactions/str": {
            "delete": {
                "description": "delete a transaction for a given trans string",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "delete transaction for a user",
                "parameters": [
                    {
                        "description": "enter Email,Password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.DeleteTransactionFromTransStringReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.SuccessRes"
                        }
                    }
                }
            }
        },
        "/user/": {
            "post": {
                "description": "creates a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "create a user",
                "parameters": [
                    {
                        "description": "enter Email, Name and Password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.SuccessRes"
                        }
                    }
                }
            }
        },
        "/user/auth": {
            "post": {
                "description": "returns userId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Authorizes the user creds",
                "parameters": [
                    {
                        "description": "enter Email and Password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UserId",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/v2/trans-split-with-one": {
            "post": {
                "description": "create a transaction and also split",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trans-split-with-one"
                ],
                "summary": "creates a transaction and also split",
                "parameters": [
                    {
                        "description": "add transaction and also split",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.TransactionAndSplitWithOneReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.SuccessRes"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "requests.CreateCategoryReq": {
            "type": "object",
            "properties": {
                "categoryName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.CreateFriendReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "friendName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.CreateTransactionReq": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "splitTag": {
                    "type": "string"
                }
            }
        },
        "requests.CreateUserReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.DeleteCategoryReq": {
            "type": "object",
            "properties": {
                "categoryName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.DeleteSplitTransactionReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "transactionId": {
                    "type": "integer"
                }
            }
        },
        "requests.DeleteTransactionFromTransStringReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "transString": {
                    "type": "string"
                }
            }
        },
        "requests.DeleteTransactionReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "transactionId": {
                    "type": "integer"
                }
            }
        },
        "requests.FriendSplit": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "friendId": {
                    "type": "integer"
                }
            }
        },
        "requests.GetFriendsReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.GetLastNTransactionsReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "lastN": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.GetSplitTransactionsReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.GetTransactionsReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.MergeCategory": {
            "type": "object",
            "properties": {
                "destinationCategoryName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "sourceCategoryName": {
                    "type": "string"
                }
            }
        },
        "requests.MoneyLentFriend": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "friendName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.NetAmountByCategoryReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.RenameCategoryReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "newCategoryName": {
                    "type": "string"
                },
                "oldCategoryName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.SettleTransactionReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "splitTransactionId": {
                    "type": "integer"
                }
            }
        },
        "requests.SplitTransactionReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "splits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.FriendSplit"
                    }
                },
                "transactionId": {
                    "type": "integer"
                }
            }
        },
        "requests.SplitWithOneFriendReq": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "friend": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "transString": {
                    "type": "string"
                }
            }
        },
        "requests.TransactionAndSplitWithOneReq": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "friendName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "splitAmount": {
                    "type": "integer"
                },
                "splitTag": {
                    "type": "string"
                }
            }
        },
        "requests.TransactionsOfCategoryReq": {
            "type": "object",
            "properties": {
                "categoryName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.UnSettleTransactionReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "splitTransactionId": {
                    "type": "integer"
                }
            }
        },
        "requests.UserReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "responses.SuccessRes": {
            "type": "object",
            "properties": {
                "success_code": {
                    "type": "string"
                },
                "success_message": {
                    "type": "string"
                }
            }
        },
        "views.TransactionWithCategory": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "categoryName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "splitTag": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "karchu.onrender.com",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Karchu API",
	Description:      "All APIs related to Karchu.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
